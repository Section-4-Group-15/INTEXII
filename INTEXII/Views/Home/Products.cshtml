@{
    ViewData["Title"] = "Products";
}
@using System.Web
@model ProjectsListViewModel

<!DOCTYPE html>
<html lang="en">
<style>
    .filter-box {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 20px;
    }

        .filter-box .col-2 {
            padding: 0; /* Remove padding from the inner column */
        }

    .active {
        background-color: #007bff; /* Bootstrap primary color */
        color: #fff; /* Text color */
        .pagination-container .pagination .page-item

    {
        display: inline-block;
        margin-right: 5px;
    }

    .pagination-container .pagination .page-item.active .page-link {
        background-color: #007bff; /* Bootstrap primary color */
        border-color: #007bff; /* Border color */
        color: #fff; /* Text color */
    }

    .pagination-container .pagination .page-link {
        color: #007bff; /* Link color */
        border: 1px solid #dee2e6; /* Border color */
        padding: 6px 12px; /* Padding */
    }

    .items-per-page-container .btn-group .btn {
        margin-right: 5px;
    }

        .items-per-page-container .btn-group .btn.active {
            background-color: #007bff; /* Bootstrap primary color */
            border-color: #007bff; /* Border color */
            color: #fff; /* Text color */
        }

    .pagination-container .pagination .page-item {
        display: inline-block;
        margin-right: 5px;
    }

        .pagination-container .pagination .page-item.active .page-link {
            background-color: #007bff; /* Bootstrap primary color */
            border-color: #007bff; /* Border color */
            color: #fff; /* Text color */
        }

    .pagination-container .pagination .page-link {
        color: #007bff; /* Link color */
        border: 1px solid #dee2e6; /* Border color */
        padding: 6px 12px; /* Padding */
    }


    .items-per-page-container .btn-group .btn.active {
        background-color: #007bff; /* Bootstrap primary color */
        border-color: #007bff; /* Border color */
        color: #fff; /* Text color */
    }

    .pagination-and-page-size-container .row {
        margin-bottom: 20px; /* Adjust as needed */
    }

    .pagination-and-page-size-container .fieldset-wrapper {
        display: flex;
        justify-content: space-between;
    }

        .pagination-and-page-size-container .fieldset-wrapper .fieldset {
            width: 48%;
        }

    }
</style>
<body>
    <main id="main">
        <!-- ======= Table of Products ======= -->
        @functions {
            public string ReplaceSpecialCharacters(string input)
            {
                if (input == null)
                {
                    return "";
                }

                // Replace special characters with their equivalents
                return input.Replace("«Ä", "")
                .Replace("‚Äì", "—")
                .Replace("‚Ñ¢", "™")
                .Replace("‚Äô", "’")
                .Replace("¬Æ", "©")
                .Replace("‚Äò", "‘")
                .Replace("‚Äú", "“")
                .Replace("‚Äù", "”")
                .Replace("‚Ñš", "š")
                .Replace("‚Ñ”", "•")
                .Replace("‚Ñˆ", "Ш")
                .Replace("‚Ä†", "†")
                .Replace("‚Äˇ", "ˇ");
            }
        }
        <div class="row">
            <div class="col-md-3">
                <div class="filter-box border rounded p-3" style="width: 300px;">
                    <h5>Categories:</h5>
                    <form asp-controller="Home" asp-action="Products" method="get">
                        @if (ViewData["Model"] != null)
                        {
                            foreach (string cat in ViewData["Model"] as List<string>)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="@cat" name="categories" value="@cat"
                                    @(ViewBag.SelectedCategories != null && ((List<string>)ViewBag.SelectedCategories).Contains(cat) ? "checked" : "") />
                                    <label class="form-check-label" for="@cat">@cat</label>
                                </div>
                            }
                        }
                        <hr />
                        <h5>Primary Color:</h5>
                        @foreach (string color in ViewData["Colors"] as List<string>)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="@color" name="colors" value="@color"
                                @(ViewBag.SelectedColors != null && ((List<string>)ViewBag.SelectedColors).Contains(color) ? "checked" : "") />
                                <label class="form-check-label" for="@color">@color</label>
                            </div>
                        }
                        <div class="mt-3">
                            <button type="submit" class="btn btn-primary">Apply Filter</button>
                            <a asp-controller="Home" asp-action="Products" class="btn btn-secondary ml-2">Reset Filters</a>
                        </div>
                    </form>
                </div>
            </div>

            <div class="col-md-9">
                <div class="container">
                    <h1>Lego Products:</h1>
                    <br />
                    @if (Model != null && Model.Products != null && Model.Products.Any())
                    {
                        foreach (var product in Model.Products)
                        {
                            <div class="product-item row">
                                <div class="col-md-10">
                                    <h3>@ReplaceSpecialCharacters(product.Name)</h3>
                                    <img src="@product.Img_Link" alt="Image" class="img-fluid" style="max-height: 300px; width: auto;" />
                                    <p><strong>Product Description:</strong> @ReplaceSpecialCharacters(product.Description)</p>
                                    <p><strong>Year:</strong> @product.Year</p>
                                    <p><strong>Number of Parts:</strong> @product.Num_Parts</p>
                                    <p><strong>Primary Color:</strong> @product.Primary_Color</p>
                                    <p><strong>Secondary Color:</strong> @product.Secondary_Color</p>
                                    <p><strong>Category:</strong> @product.Category_1 @(product.Category_2 != null ? ("and " + product.Category_2) : "")</p>
                                </div>
                                <div class="col-md-2 text-right">
                                    <div class="d-flex flex-column align-items-end">
                                        <h2 class="text-success">$@product.Price</h2>

                                        <!-- Updated Add to Cart Button -->
                                        <form id="addToCartForm" asp-controller="Home" asp-action="AddToCart" method="post">
                                            <input type="hidden" name="productId" value="@Model.Products.FirstOrDefault()?.product_ID" />
                                            <input type="hidden" name="quantity" value="1" />
                                            <button type="submit" class="btn btn-primary" id="addToCartButton">Add to Cart</button>
                                        </form>

                                        <a href="@Url.Action("IndProducts", new { id = product.product_ID })" class="btn btn-secondary mt-2">
                                            View Details
                                        </a>
                                    </div>
                                </div>

                            </div>
                            <hr />
                        }

                        <!-- Pagination -->
                        <div class="pagination-and-page-size-container">
                            <div class="row">
                                <div class="col-md-6">
                                    <form id="itemsPerPageForm" asp-controller="Home" asp-action="Products" method="get">
                                        <div class="fieldset-wrapper">
                                            <fieldset class="filter-box border rounded p-3">
                                                <legend>Items per page:</legend>
                                                <div class="btn-group">
                                                    <button type="submit" name="pageSize" value="5" class="btn @(ViewBag.PageSize == 5 ? "btn-primary active" : "btn-outline-primary")">5</button>
                                                    <button type="submit" name="pageSize" value="10" class="btn @(ViewBag.PageSize == 10 ? "btn-primary active" : "btn-outline-primary")">10</button>
                                                    <button type="submit" name="pageSize" value="20" class="btn @(ViewBag.PageSize == 20 ? "btn-primary active" : "btn-outline-primary")">20</button>
                                                </div>
                                            </fieldset>
                                        </div>
                                        <div class="fieldset-wrapper mt-3">
                                            <fieldset class="filter-box border rounded p-3">
                                                <legend>Page:</legend>
                                                <div class="pagination-container">
                                                    <nav aria-label="Page navigation">
                                                        <ul class="pagination justify-content-center">
                                                            @if (Model.PaginationInfo != null && Model.PaginationInfo.TotalPages > 1)
                                                            {
                                                                for (int i = 1; i <= Model.PaginationInfo.TotalPages; i++)
                                                                {
                                                                    <li class="page-item @(Model.PaginationInfo.CurrentPage == i ? "active" : "")">
                                                                        <a class="page-link" href="@Url.Action("Products", new { pageNum = i, categories = ViewBag.SelectedCategories, colors = ViewBag.SelectedColors, pageSize = ViewBag.PageSize })">@i</a>
                                                                    </li>
                                                                }
                                                            }
                                                        </ul>
                                                    </nav>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                       

                    }
                    else
                    {
                        <p>No products found.</p>
                    }
                </div>
            </div>
        </div>
    </main>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('itemsPerPageForm');
            form.addEventListener('click', function (event) {
                if (event.target.type === 'submit') {
                    event.preventDefault(); // Prevent the default form submission

                    const categories = Array.from(document.querySelectorAll('input[name="categories"]:checked')).map(el => el.value);
                    const colors = Array.from(document.querySelectorAll('input[name="colors"]:checked')).map(el => el.value);
                    const selectedPageSize = event.target.value;

                    // Build the URL with selected filter options and page size
                    const url = new URL(form.action, window.location.origin);
                    categories.forEach(category => url.searchParams.append('categories', category));
                    colors.forEach(color => url.searchParams.append('colors', color));
                    url.searchParams.append('pageSize', selectedPageSize);

                    // Redirect to the updated URL
                    window.location.href = url.toString();
                }
            });
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#addToCartForm').submit(function (event) {
                event.preventDefault(); // Prevent the default form submission

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddToCart", "Home")',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            showPopup(response.productName);
                        } else {
                            // Redirect to the login page if there's an error
                            window.location.href = '@Url.Content("~/Identity/Account/Login")';
                        }
                    },
                    error: function () {
                        // Redirect to the login page if there's an error
                        window.location.href = '@Url.Content("~/Identity/Account/Login")';
                    }
                });
            });
        });

        function showPopup(productName) {
            var popupHtml = `
            <div class="modal" tabindex="-1" role="dialog" id="addToCartModal">
              <div class="modal-dialog" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title">Item Added to Cart</h5>
                  </div>
                  <div class="modal-body">
                    <p>${productName} has been added to your cart.</p>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="redirectToProducts()">Continue Shopping</button>
                    <a href="@Url.Action("Cart", "Home")" class="btn btn-primary">Checkout</a>
                  </div>
                </div>
              </div>
            </div>
          `;

            $('body').append(popupHtml);
            $('#addToCartModal').modal('show');
        }

        function redirectToProducts() {
            window.location.href = '@Url.Action("Products", "Home")';
        }
    </script>
</body>
</html> 