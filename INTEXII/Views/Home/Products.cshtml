@{
    ViewData["Title"] = "Products";
}
@using System.Web
@model ProjectsListViewModel

<!DOCTYPE html>
<html lang="en">
<style>
    .filter-box {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 20px;
    }

        .filter-box .col-2 {
            padding: 0; /* Remove padding from the inner column */
        }

    .active {
        background-color: #007bff; /* Bootstrap primary color */
        color: #fff; /* Text color */
        .pagination-container .pagination .page-item

    {
        display: inline-block;
        margin-right: 5px;
    }

    .pagination-container .pagination .page-item.active .page-link {
        background-color: #007bff; /* Bootstrap primary color */
        border-color: #007bff; /* Border color */
        color: #fff; /* Text color */
    }

    .pagination-container .pagination .page-link {
        color: #007bff; /* Link color */
        border: 1px solid #dee2e6; /* Border color */
        padding: 6px 12px; /* Padding */
    }

    .items-per-page-container .btn-group .btn {
        margin-right: 5px;
    }

        .items-per-page-container .btn-group .btn.active {
            background-color: #007bff; /* Bootstrap primary color */
            border-color: #007bff; /* Border color */
            color: #fff; /* Text color */
        }

    .pagination-container .pagination .page-item {
        display: inline-block;
        margin-right: 5px;
    }

        .pagination-container .pagination .page-item.active .page-link {
            background-color: #007bff; /* Bootstrap primary color */
            border-color: #007bff; /* Border color */
            color: #fff; /* Text color */
        }

    .pagination-container .pagination .page-link {
        color: #007bff; /* Link color */
        border: 1px solid #dee2e6; /* Border color */
        padding: 6px 12px; /* Padding */
    }


        .items-per-page-container .btn-group .btn.active {
            background-color: #007bff; /* Bootstrap primary color */
            border-color: #007bff; /* Border color */
            color: #fff; /* Text color */
        }

    .pagination-and-page-size-container .row {
        margin-bottom: 20px; /* Adjust as needed */
    }

    .pagination-and-page-size-container .fieldset-wrapper {
        display: flex;
        justify-content: space-between;
    }

        .pagination-and-page-size-container .fieldset-wrapper .fieldset {
            width: 48%;
        }
    }
</style>
<body>
    <main id="main">
        <!-- ======= Table of Products ======= -->
        @functions {
            public string ReplaceSpecialCharacters(string input)
            {
                if (input == null)
                {
                    return "";
                }

                // Replace special characters with their equivalents
                return input.Replace("«Ä", "")
                .Replace("‚Äì", "—")
                .Replace("‚Ñ¢", "™")
                .Replace("‚Äô", "’")
                .Replace("¬Æ", "©")
                .Replace("‚Äò", "‘")
                .Replace("‚Äú", "“")
                .Replace("‚Äù", "”")
                .Replace("‚Ñš", "š")
                .Replace("‚Ñ”", "•")
                .Replace("‚Ñˆ", "Ш")
                .Replace("‚Ä†", "†")
                .Replace("‚Äˇ", "ˇ");
            }
        }
        <div class="row">
            <div class="col-md-3">
                <div class="filter-box border rounded p-3" style="width: 300px;">
                    <h5>Categories:</h5>
                    <form asp-controller="Home" asp-action="Products" method="get">
                        @if (ViewData["Model"] != null)
                        {
                            foreach (string cat in ViewData["Model"] as List<string>)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="@cat" name="categories" value="@cat"
                                    @(ViewBag.SelectedCategories != null && ((List<string>)ViewBag.SelectedCategories).Contains(cat) ? "checked" : "") />
                                    <label class="form-check-label" for="@cat">@cat</label>
                                </div>
                            }
                        }
                        <hr />
                        <h5>Primary Color:</h5>
                        @foreach (string color in ViewData["Colors"] as List<string>)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="@color" name="colors" value="@color"
                                @(ViewBag.SelectedColors != null && ((List<string>)ViewBag.SelectedColors).Contains(color) ? "checked" : "") />
                                <label class="form-check-label" for="@color">@color</label>
                            </div>
                        }
                        <div class="mt-3">
                            <button type="submit" class="btn btn-primary">Apply Filter</button>
                            <a asp-controller="Home" asp-action="Products" class="btn btn-secondary ml-2">Reset Filters</a>
                        </div>
                    </form>
                </div>
            </div>

            <div class="col-md-9">
                <div class="container">
                    <h1>Lego Products:</h1>
                    <br />
                    @if (Model != null && Model.Products != null && Model.Products.Any())
                    {
                        foreach (var product in Model.Products)
                        {
                            <div class="product-item row">
                                <div class="col-md-10">
                                    <h3>@ReplaceSpecialCharacters(product.Name)</h3>
                                    <img src="@product.Img_Link" alt="Image" class="img-fluid" style="max-height: 300px; width: auto;" />
                                    <p><strong>Product Description:</strong> @ReplaceSpecialCharacters(product.Description)</p>
                                    <p><strong>Year:</strong> @product.Year</p>
                                    <p><strong>Number of Parts:</strong> @product.Num_Parts</p>
                                    <p><strong>Primary Color:</strong> @product.Primary_Color</p>
                                    <p><strong>Secondary Color:</strong> @product.Secondary_Color</p>
                                    <p><strong>Category:</strong> @product.Category_1 @(product.Category_2 != null ? ("and " + product.Category_2) : "")</p>
                                </div>
                                <div class="col-md-2 text-right">
                                    <div class="d-flex flex-column align-items-end">
                                        <span class="price" style="font-size: larger;">@string.Format("{0:C}", product.Price)</span>
                                        <a href="#" class="btn btn-info mt-2" role="button" data-toggle="tooltip" data-placement="top" title="Add to Cart">
                                            <img src="~/img/shopping-cart.png" alt="Add to Cart" class="img-fluid" style="max-height: 30px;" />
                                        </a>
                                        <a href="@Url.Action("IndProducts", new { id = product.Product_Id })" class="btn btn-secondary mt-2" role="button">
                                            View Details
                                        </a>

                                    </div>
                                </div>
                            </div>
                            <hr />
                        }

                        <!-- Pagination -->
                        <div class="pagination-and-page-size-container">
                            <div class="row">
                                <div class="col-md-6">
                                    <!-- Page Size Filter -->
                                    <form id="itemsPerPageForm" asp-controller="Home" asp-action="Products" method="get">
                                        <div class="fieldset-wrapper">
                                            <fieldset class="filter-box border rounded p-3 fieldset">
                                                <legend>Page:</legend>
                                                <!-- Pagination -->
                                                <div class="pagination-container">
                                                    <nav aria-label="Page navigation">
                                                        <ul class="pagination justify-content-center">
                                                            @if (Model.PaginationInfo != null && Model.PaginationInfo.TotalPages > 1)
                                                            {
                                                                for (int i = 1; i <= Model.PaginationInfo.TotalPages; i++)
                                                                {
                                                                    <li class="page-item @(Model.PaginationInfo.CurrentPage == i ? "active" : "")">
                                                                        <a class="page-link" href="@Url.Action("Products", new { pageNum = i, categories = ViewBag.SelectedCategories, colors = ViewBag.SelectedColors, pageSize = ViewBag.PageSize })">@i</a>
                                                                    </li>
                                                                }
                                                            }
                                                        </ul>
                                                    </nav>
                                                </div>
                                            </fieldset>
                                            <fieldset class="filter-box border rounded p-3 fieldset">
                                                <legend>Items per page:</legend>
                                                <div class="btn-group">
                                                    <button type="submit" name="pageSize" value="5" class="btn @(ViewBag.PageSize == 5 ? "btn-primary active" : "btn-outline-primary")">5</button>
                                                    <button type="submit" name="pageSize" value="10" class="btn @(ViewBag.PageSize == 10 ? "btn-primary active" : "btn-outline-primary")">10</button>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <script>
                            document.addEventListener('DOMContentLoaded', function () {
                                const form = document.getElementById('itemsPerPageForm');
                                form.addEventListener('click', function (event) {
                                    if (event.target.type === 'submit') {
                                        const categories = Array.from(document.querySelectorAll('input[name="categories"]:checked')).map(el => el.value);
                                        const colors = Array.from(document.querySelectorAll('input[name="colors"]:checked')).map(el => el.value);
                                        const selectedPageSize = event.target.value;

                                        // Add selected filter options and page size to the form data
                                        const formData = new FormData(form);
                                        formData.append('categories', categories);
                                        formData.append('colors', colors);
                                        formData.append('pageSize', selectedPageSize);

                                        // Submit the form with updated data
                                        fetch(form.action, {
                                            method: 'POST',
                                            body: formData
                                        }).then(response => {
                                            if (response.ok) {
                                                window.location.reload(); // Refresh the page after form submission
                                            }
                                        }).catch(error => console.error('Error:', error));
                                    }
                                });
                            });
                        </script>

                    }
                    else
                    {
                        <p>No products found.</p>
                    }
                </div>
            </div>
        </div>
    </main>
</body>
</html>