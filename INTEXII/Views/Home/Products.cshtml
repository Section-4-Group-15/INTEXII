@{
    ViewData["Title"] = "Products";
}
@using System.Web
@model ProjectsListViewModel

<!DOCTYPE html>
<html lang="en">
<style>
    .filter-box {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 20px;
    }

        .filter-box .col-2 {
            padding: 0; /* Remove padding from the inner column */
        }
</style>
<body>
    <main id="main">
        <div class="row">
            <div class="col-md-3">
                <div class="filter-box border rounded p-3" style="width: 300px;">
                    <h5>Categories:</h5>
                    <form asp-controller="Home" asp-action="Products" method="get">
                        @if (ViewData["Model"] != null)
                        {
                            foreach (string cat in ViewData["Model"] as List<string>)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="@cat" name="categories" value="@cat"
                                    @(ViewBag.SelectedCategories != null && ((List<string>)ViewBag.SelectedCategories).Contains(cat) ? "checked" : "") />
                                    <label class="form-check-label" for="@cat">@cat</label>
                                </div>
                            }
                        }
                        <div class="mt-3">
                            <button type="submit" class="btn btn-primary">Apply Filter</button>
                            <a asp-controller="Home" asp-action="Products" class="btn btn-secondary ml-2">Reset Filters</a>
                        </div>
                    </form>
                </div>
            </div>
            <div class="col-md-9">
                <div class="container">
                    <h1>Lego Products:</h1>
                    <br />
                    @if (Model != null && Model.Products != null && Model.Products.Any())
                    {
                        foreach (var product in Model.Products)
                        {
                            <div class="product-item row">
                                <div class="col-md-10">
                                    <h3>@product.Name</h3>
                                    <img src="@product.Img_Link" alt="Image" class="img-fluid" style="max-height: 300px; width: auto;" />
                                    <p><strong>Product Description:</strong> @product.Description</p>
                                    <p><strong>Year:</strong> @product.Year</p>
                                    <p><strong>Number of Parts:</strong> @product.Num_Parts</p>
                                    <p><strong>Primary Color:</strong> @product.Primary_Color</p>
                                    <p><strong>Secondary Color:</strong> @product.Secondary_Color</p>
                                    <p><strong>Category:</strong> @product.Category_1 @(product.Category_2 != null ? ("and " + product.Category_2) : "")</p>
                                </div>
                                <div class="col-md-2 text-right">
                                    <div class="d-flex flex-column align-items-end">
                                        <span class="price" style="font-size: larger;">@string.Format("{0:C}", product.Price)</span>
                                        <a href="#" class="btn btn-info mt-2" role="button" data-toggle="tooltip" data-placement="top" title="Add to Cart">
                                            <img src="~/img/shopping-cart.png" alt="Add to Cart" class="img-fluid" style="max-height: 30px;" />
                                        </a>
                                        <a href="#" class="btn btn-secondary mt-2" role="button">
                                            View Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <hr />
                        }

                        <!-- Pagination -->
                        <div class="pagination-container">
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                                    @if (Model.PaginationInfo != null && Model.PaginationInfo.TotalPages > 1)
                                    {
                                        for (int i = 1; i <= Model.PaginationInfo.TotalPages; i++)
                                        {
                                            <li class="page-item @(Model.PaginationInfo.CurrentPage == i ? "active" : "")">
                                                <a class="page-link" href="@Url.Action("Products", new { pageNum = i, categories = ViewBag.SelectedCategories })">@i</a>
                                            </li>
                                        }
                                    }
                                </ul>
                            </nav>
                        </div>
                    }
                    else
                    {
                        <p>No products found.</p>
                    }
                </div>
            </div>
        </div>
    </main>
</body>
</html>